.card {
  display: grid;

  grid-gap: 16px;
  overflow: hidden;

  // Media queries to adjust grid columns based on viewport width
  @media (max-width: 575px) {
    grid-template-columns: 1fr;
  }

  @media (min-width: 576px) and (max-width: 767px) {
    grid-template-columns: 1fr;
  }

  @media (min-width: 768px) and (max-width: 991px) {
    grid-template-columns: repeat(2, 1fr);
  }

  @media (min-width: 992px) {
    grid-template-columns: repeat(3, 1fr);
  }
}

.offer-thumbnail {
  width: 18rem;
  height: 18rem;
  transition: filter 0.3s; // Smooth transition for blur effect
  position: relative;

  &.active {
    filter: blur(3px); // Apply a blur filter

    &::before {
      content: "";
      background-image: linear-gradient(to bottom, rgba(0,0,0,0.1), rgba(0,0,0,0.8));
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      pointer-events: none;  // Ensure it doesn't interfere with clicks
      z-index: 1;  // Ensure it's on top of the card's content
    }
  }
}

.card-row {
  display: flex;
  width: 100%;
  max-width: 100%;
  margin-top: var(--bs-gutter-y);
}

.in-line {
  display: inline-block;
}

.image-container {
  position: relative;
  display: inline-block;
  width: 18rem; // Setting width here to ensure consistent sizing

  .hover-text {
    opacity: 0; // Initially transparent
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #fff; // Text color
    background-color: rgba(0, 0, 0, 0.5); // Background color with some transparency
    padding: 10px;
    border-radius: 5px;
    text-align: center;
    transition: opacity 0.3s; // Smooth transition for hover effect
    pointer-events: none;  // Ensure it doesn't interfere with clicks
    z-index: 2;  // Ensure it's on top of the gradient overlay
  }

  &:hover .hover-text {
    opacity: 1; // Display text when parent container is hovered
  }
}
